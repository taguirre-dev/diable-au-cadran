{"version":3,"sources":["components/UX-UI/googleMaps/GoogleMapWithMarker.js","components/UX-UI/googleMaps/MapWrapper.js","components/sections/contact/Contact.js","components/sections/contact/index.js"],"names":["styles","require","GoogleMapComponentWithMarker","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","defaultOptions","disableDefaultUI","draggable","keyboardShortcuts","scaleControl","scrollwheel","position","width","height","MapWrapper","style","googleMapURL","process","loadingElement","containerElement","mapElement","React","memo","section","isChanging","filterFx","appContext","Form","useForm","form","layout","labelCol","sm","span","wrapperCol","validateMessages","required","types","email","onFinish","values","resetFields","settings","globalSettings","className","tech","order","adress","zipcode","city","phone","labelAlign","data-netlify","Item","name","label","rules","type","TextArea","autoSize","minRows","data-netlify-recaptcha","htmlType","Contact","useBackground","useTransition","useContext","FirebaseContext"],"mappings":"uxFAYA,MAAMA,EAASC,EAAQ,KAsCRC,MA/BsBC,uBACnCC,wBAAeC,GACb,kBAAC,YAAD,CACEC,YAAa,GACbC,cAAe,CACbC,IAAK,WACLC,KAAM,UAERC,eAAgB,CACdC,kBAAkB,EAClBC,WAAW,EACXC,mBAAmB,EACnBC,cAAc,EACdC,aAAa,EACbf,OAAQA,IAGV,kBAAC,SAAD,CAOEgB,SAAU,CAAER,IAAK,WAAYC,KAAM,eCrC3C,MAAMT,EAAS,CACbiB,MAAO,OACPC,OAAQ,QAgBKC,MAbI,IAEf,yBAAKC,MAAOpB,GACV,kBAAC,EAAD,CACEqB,aAAY,gGAA2FC,2CACvGC,eAAgB,yBAAKH,MAAO,CAAEF,OAAO,UACrCM,iBAAkB,yBAAKJ,MAAO,CAAEF,OAAO,UACvCO,WAAY,yBAAKL,MAAO,CAAEF,OAAO,a,kCC0F1BQ,UAAMC,KArGL,EAAGC,UAASC,aAAYC,WAAUC,iBAAkB,MAAD,EAClDC,IAAKC,UAAbC,EAD0D,oBAG3DC,EAAS,CACbC,SAAU,CACRC,GAAI,CAAEC,KAAM,KAEdC,WAAY,CACVF,GAAI,CAAEC,KAAM,MAGVE,EAAmB,CAEvBC,SAAU,iCACVC,MAAO,CACLC,MAAO,kCAILC,EAAYC,IAChBX,EAAKY,eAGP,GAAIlB,EAAS,CACX,MAAMmB,EAAWhB,EAAWiB,eAAe,GAC3C,OACE,yBACEC,UAAS,yBAAoBrB,EAAQsB,KAAKC,MAAjC,YAA0CtB,EAA1C,aAET,yBAAKoB,UAAS,4BAAuBnB,IACnC,yBAAKmB,UAAU,aACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,UACb,uCACA,8BAAOF,GAAYA,EAASK,QAC5B,8BACGL,GAAYA,EAASM,QADxB,MACoCN,GAAYA,EAASO,MAEzD,8BAAOP,GAAYA,EAASQ,QAE9B,kBAAC,IAAD,iBACMpB,EADN,CAEED,KAAMA,EACNU,SAAUA,EACVJ,iBAAkBA,EAClBS,UAAU,eACVO,WAAW,OACXC,eAAa,SAEb,kBAAC,IAAKC,KAAN,CACEC,KAAM,CAAC,OAAQ,QACfC,MAAM,kBACNX,UAAU,cAEVY,MAAO,CACL,CACEpB,UAAU,KAId,kBAAC,IAAD,OAEF,kBAAC,IAAKiB,KAAN,CACEC,KAAM,CAAC,OAAQ,SACfC,MAAM,QAENX,UAAU,cACVY,MAAO,CACL,CACEC,KAAM,WAIV,kBAAC,IAAD,OAEF,kBAAC,IAAKJ,KAAN,CACEC,KAAM,CAAC,OAAQ,WAEfC,MAAM,UACNX,UAAU,eAEV,kBAAC,IAAMc,SAAP,CAAgBC,SAAU,CAAEC,QAAS,MAEvC,kBAAC,IAAKP,KAAN,CAAWC,KAAM,CAAC,OAAQ,WAAYV,UAAU,eAC9C,yBAAKiB,yBAAuB,UAE9B,kBAAC,IAAD,CAAQC,SAAS,SAASlB,UAAU,kBAApC,wBASV,OAAO,OClFImB,UAfC,EAAGxC,cACjB,MAAME,EAAWuC,cACXxC,EAAayC,cACXvC,EAAewC,qBAAWC,KAA1BzC,WAER,OACE,kBAAC,EAAD,CACEH,QAASA,EACTE,SAAUA,EACVD,WAAYA,EACZE,WAAYA","file":"static/js/6.ec7108ab.chunk.js","sourcesContent":["// Import React\nimport React from \"react\"\n\n// Import necessary components for React Google Maps\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\"\n\n// Import custom styles to customize the style of Google Map\nconst styles = require(\"./GoogleMapStyles.json\")\n\n// Import custom icon for map marker\n// You can use this if you need to support IE11 and lower.\n// const mapMarker = require('./GoogleMapMarker.svg')\n\n// Google Map component\nconst GoogleMapComponentWithMarker = withScriptjs(\n  withGoogleMap((props) => (\n    <GoogleMap\n      defaultZoom={16}\n      defaultCenter={{\n        lat: 48.7451695, // latitude for the center of the map\n        lng: -0.0227061, // longitude for the center of the map\n      }}\n      defaultOptions={{\n        disableDefaultUI: true, // disable default map UI\n        draggable: true, // make map draggable\n        keyboardShortcuts: false, // disable keyboard shortcuts\n        scaleControl: true, // allow scale controle\n        scrollwheel: true, // allow scroll wheel\n        styles: styles, // change default map styles\n      }}\n    >\n      <Marker\n        // icon={{\n        //   url:\n        //     // eslint-disable-next-line no-multi-str\n        //     'data:image/svg+xml;utf-8, \\\n        //     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"45\" viewBox=\"0 0 512 512\"><path fill=\"#e74c3c\" d=\"M252.55 0h5.95c33.76.52 67.31 11.19 94.97 30.59 27.22 18.94 48.77 45.95 61.03 76.77 13.14 32.69 15.69 69.52 7.17 103.71-4.69 19.44-13.24 37.77-24.07 54.54-43.51 75.53-86.86 151.15-130.3 226.72-3.45 6.37-7.56 12.4-10.59 18.97l-.03.7h-1.21c-1.09-3.48-3.25-6.44-4.99-9.6-45.11-78.52-90.2-157.06-135.34-235.57-11.21-17.1-19.98-35.9-24.82-55.81-8.5-34.15-5.96-70.94 7.16-103.6 12.26-30.85 33.82-57.89 61.07-76.84C185.94 11.35 219.12.74 252.55 0m-6.26 64.44c-35.07 2.83-67.55 24.7-84.18 55.59-12.65 23.12-15.96 51.04-9.61 76.57 5.91 23.77 20.39 45.27 40.13 59.76 15.73 11.8 34.8 19.03 54.4 20.59 25.3 2.2 51.34-4.95 71.73-20.15 21.42-15.44 36.67-39.16 41.84-65.06 3.31-17.12 2.61-35.08-2.44-51.8-7.43-24.97-24.51-46.85-46.76-60.35-19.27-12.01-42.54-17.21-65.11-15.15z\" /><path fill=\"#c0392b\" d=\"M246.29 64.44c22.57-2.06 45.84 3.14 65.11 15.15 22.25 13.5 39.33 35.38 46.76 60.35 5.05 16.72 5.75 34.68 2.44 51.8-5.17 25.9-20.42 49.62-41.84 65.06-20.39 15.2-46.43 22.35-71.73 20.15-19.6-1.56-38.67-8.79-54.4-20.59-19.74-14.49-34.22-35.99-40.13-59.76-6.35-25.53-3.04-53.45 9.61-76.57 16.63-30.89 49.11-52.76 84.18-55.59m1.83 42.76c-15.04 1.8-29.3 9.21-39.45 20.45-10.03 10.95-16.02 25.5-16.56 40.34-.67 14.62 3.9 29.41 12.74 41.08 9.61 12.84 24.18 21.87 39.99 24.58 13.71 2.43 28.21.28 40.55-6.18 13.67-7.04 24.63-19.16 30.18-33.5 5.65-14.32 5.84-30.7.55-45.15-4.99-13.88-15-25.86-27.72-33.3-12.03-7.13-26.42-10.05-40.28-8.32z\" /></svg>', // This may not work in <=IE11\n        // }}\n        position={{ lat: 48.7451695, lng: -0.0227061 }}\n      />\n    </GoogleMap>\n  ))\n)\n\n// Export Google Map component\nexport default GoogleMapComponentWithMarker\n","import React from \"react\"\n\n// Import Google Map component\nimport GoogleMapComponentWithMarker from \"./GoogleMapWithMarker\"\n\n// Some default styles\nconst styles = {\n  width: \"100%\",\n  height: \"100%\",\n}\n\nconst MapWrapper = () => {\n  return (\n    <div style={styles}>\n      <GoogleMapComponentWithMarker\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_DIABLE_AU_CADRAN_GOOGLE_MAPS_KEY}`}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `100%` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n      />\n    </div>\n  )\n}\n\nexport default MapWrapper\n","import React from \"react\"\nimport MapWrapper from \"../../UX-UI/googleMaps/MapWrapper\"\nimport { Form, Input, Button } from \"antd\"\nimport \"antd/dist/antd.css\"\n\nimport \"./style/style.css\"\n\nconst Contact = ({ section, isChanging, filterFx, appContext }) => {\n  const [form] = Form.useForm()\n\n  const layout = {\n    labelCol: {\n      sm: { span: 24 },\n    },\n    wrapperCol: {\n      sm: { span: 24 },\n    },\n  }\n  const validateMessages = {\n    // eslint-disable-next-line no-template-curly-in-string\n    required: \"${label} est nécéssaire.\",\n    types: {\n      email: \"Ce n'est pas un email valide.\",\n    },\n  }\n\n  const onFinish = (values) => {\n    form.resetFields()\n  }\n\n  if (section) {\n    const settings = appContext.globalSettings[0]\n    return (\n      <div\n        className={`section section${section.tech.order} ${isChanging} contact`}\n      >\n        <div className={`section-container ${filterFx}`}>\n          <div className='left-side'>\n            <MapWrapper />\n          </div>\n          <div className='right-side'>\n            <div className='adress'>\n              <h3>Contact</h3>\n              <span>{settings && settings.adress}</span>\n              <span>\n                {settings && settings.zipcode} - {settings && settings.city}\n              </span>\n              <span>{settings && settings.phone}</span>\n            </div>\n            <Form\n              {...layout}\n              form={form}\n              onFinish={onFinish}\n              validateMessages={validateMessages}\n              className='form-contact'\n              labelAlign='left'\n              data-netlify='true'\n            >\n              <Form.Item\n                name={[\"user\", \"name\"]}\n                label='Nom + Prénom'\n                className='input-field'\n                // onChange={(e) => setUserName(e.target.value)}\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                name={[\"user\", \"email\"]}\n                label='Email'\n                // onChange={(e) => setEmail(e.target.value)}\n                className='input-field'\n                rules={[\n                  {\n                    type: \"email\",\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                name={[\"user\", \"message\"]}\n                // onChange={(e) => setMessage(e.target.value)}\n                label='Message'\n                className='input-field'\n              >\n                <Input.TextArea autoSize={{ minRows: 8 }} />\n              </Form.Item>\n              <Form.Item name={[\"user\", \"captcha\"]} className='input-field'>\n                <div data-netlify-recaptcha='true' />\n              </Form.Item>\n              <Button htmlType='submit' className='send-email-btn'>\n                Envoyer un email\n              </Button>\n            </Form>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default React.memo(Contact)\n","import React, { useContext } from \"react\"\nimport FirebaseContext from \"../../../firebase/context\"\nimport \"./style/style.css\"\nimport useBackground from \"../../../utils/hooks/useBackground\"\nimport useTransition from \"../../../utils/hooks/useTransition\"\nimport Component from \"./Contact\"\n\nconst Contact = ({ section }) => {\n  const filterFx = useBackground()\n  const isChanging = useTransition()\n  const { appContext } = useContext(FirebaseContext)\n\n  return (\n    <Component\n      section={section}\n      filterFx={filterFx}\n      isChanging={isChanging}\n      appContext={appContext}\n    />\n  )\n}\n\nexport default Contact\n"],"sourceRoot":""}