{"version":3,"sources":["utils/hooks/useActivSection.js","utils/textUtil.js","components/sections/service/Service.js","components/sections/service/index.js"],"names":["useActivSection","section","appContext","useContext","FirebaseContext","useState","isActiv","setIsActiv","useEffect","idActivSection","id","addLineBreaks","string","split","map","text","index","Fragment","key","React","memo","isChanging","filterFx","isActivSection","className","tech","order","content1","content2","data-text","title","Service","useBackground","useTransition"],"mappings":"qJAgBeA,IAbUC,IAAa,MAC5BC,EAAeC,qBAAWC,KAA1BF,WAD2B,EAELG,qBAFK,mBAE5BC,EAF4B,KAEnBC,EAFmB,KAUnC,OANAC,oBAAU,KACJN,EAAWO,iBAAmBR,EAAQS,GACxCH,EAAW,iBACNA,EAAW,OACjB,CAACL,EAAWO,eAAgBR,EAAQS,KAEhCJ,I,iCCbT,sDAMO,MAAMK,EAAiBC,GAC5BA,EAAOC,MAAM,OAAOC,IAAI,CAACC,EAAMC,IAE3B,kBAAC,IAAMC,SAAP,CAAgBC,IAAG,UAAKH,EAAL,YAAaC,IAC7BD,EACD,gC,6HC6BOI,UAAMC,KAnCL,EAAGnB,UAASoB,aAAYC,WAAUC,oBAC5CtB,EAEA,yBACES,GAAG,WACHc,UAAS,yBAAoBvB,EAAQwB,KAAKC,MAAjC,YAA0CL,EAA1C,YAAwDE,EAAxD,aAET,yBAAKC,UAAS,4BAAuBF,IACnC,yBAAKE,UAAS,yBAAoBD,IAChC,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,WAAWb,YAAcV,EAAQ0B,WAChD,wBACEH,UAAS,UACPD,EAAiB,mBAAqB,eAGxC,gDACA,2DAEF,yBAAKC,UAAU,WAAWb,YAAcV,EAAQ2B,aAGpD,yBAAKJ,UAAS,2BAAsBD,IAClC,wBAAIC,UAAU,mBAAmBK,YAAW5B,EAAQ6B,OACjD7B,EAAQ6B,UAOZ,MCfIC,UAdC,EAAG9B,cACjB,MAAMqB,EAAWU,cACXX,EAAaY,cACbV,EAAiBvB,YAAgBC,GACvC,OACE,kBAAC,EAAD,CACEA,QAASA,EACTqB,SAAUA,EACVD,WAAYA,EACZE,eAAgBA","file":"static/js/5.0db62d86.chunk.js","sourcesContent":["import { useContext, useEffect, useState } from \"react\"\nimport FirebaseContext from \"../../firebase/context\"\n\nconst useActivSection = (section) => {\n  const { appContext } = useContext(FirebaseContext)\n  const [isActiv, setIsActiv] = useState()\n\n  useEffect(() => {\n    if (appContext.idActivSection === section.id) {\n      setIsActiv(\"activ-section\")\n    } else setIsActiv(null)\n  }, [appContext.idActivSection, section.id])\n\n  return isActiv\n}\n\nexport default useActivSection\n","import React from \"react\"\n\n/**\n * Fonction qui retourne un nouveau noeud react dans le DOM lorsqu'un \\n est détecté dans un texte.\n * @param {} string\n */\nexport const addLineBreaks = (string) =>\n  string.split(\"\\\\n\").map((text, index) => {\n    return (\n      <React.Fragment key={`${text}-${index}`}>\n        {text}\n        <br />\n      </React.Fragment>\n    )\n  })\n","import React from \"react\"\nimport { addLineBreaks } from \"../../../utils/textUtil\"\n\nimport \"./style/style.css\"\n\nconst Service = ({ section, isChanging, filterFx, isActivSection }) => {\n  if (section) {\n    return (\n      <div\n        id='section1'\n        className={`section section${section.tech.order} ${isChanging} ${isActivSection} service`}\n      >\n        <div className={`section-container ${filterFx}`}>\n          <div className={`left-bloc-dark ${isActivSection}`}>\n            <div className='text-container'>\n              <div className='content'>{addLineBreaks(section.content1)}</div>\n              <h2\n                className={`${\n                  isActivSection ? \"anim-title activ\" : \"anim-title\"\n                }`}\n              >\n                <span>100% artisanal</span>\n                <span>Découvrez l'atelier !</span>\n              </h2>\n              <div className='content'>{addLineBreaks(section.content2)}</div>\n            </div>\n          </div>\n          <div className={`right-bloc-light ${isActivSection}`}>\n            <h1 className='title-decoration' data-text={section.title}>\n              {section.title}\n            </h1>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default React.memo(Service)\n","import React from \"react\"\nimport \"./style/style.css\"\nimport useBackground from \"../../../utils/hooks/useBackground\"\nimport useTransition from \"../../../utils/hooks/useTransition\"\nimport useActivSection from \"../../../utils/hooks/useActivSection\"\nimport Component from \"./Service\"\n\nconst Service = ({ section }) => {\n  const filterFx = useBackground()\n  const isChanging = useTransition()\n  const isActivSection = useActivSection(section)\n  return (\n    <Component\n      section={section}\n      filterFx={filterFx}\n      isChanging={isChanging}\n      isActivSection={isActivSection}\n    />\n  )\n}\n\nexport default Service\n"],"sourceRoot":""}